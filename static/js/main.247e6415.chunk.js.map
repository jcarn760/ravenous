{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","utils/yelpAPI.js","components/App/App.js","index.js"],"names":["Business","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","createElement","className","href","props","business","name","target","rel","src","imgSrc","alt","address","city","state","zipCode","category","id","rating","reviewCount","Component","BusinessList","businesses","map","SearchBar","_this","call","renderSortByOptions","Object","keys","sortByOptions","sortByOption","sortByOptionValue","getSortByClass","onClick","handleSortByChange","bind","_assertThisInitialized","busName","location","sortBy","handleBusNameChange","handleLocationChange","handleSearch","Best Match","Highest Rated","Most Reviewed","setState","searchYelp","event","preventDefault","placeholder","onChange","type","Yelp","term","fetch","concat","headers","Authorization","then","response","console","log","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","catch","error","App","_this2","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.247e6415.chunk.js","sourcesContent":["import React from \"react\";\nimport './BusinessStyles.css';\n\n// The component will represent how a business (a restaurant) in Ravenous will be formatted and styled.\n\n// Each Business component should display an image, name, address, city, state, zipcode, category, rating, \n\n// and review count.\n\n// whatever is in the businesses array when business is called on will be passed to this file and display each tag accordingly.\n\nclass Business extends React.Component {\n    render() {\n        return (\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                    <a href={ 'http://www.google.com/search?q=' + this.props.business.name } target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={ this.props.business.imgSrc } alt=\"\" />\n                    </a>\n                </div>\n                <h2>{ this.props.business.name }</h2>\n                <div className=\"Business-information\">\n                    <div className=\"Business-address\">\n                        <a href={ 'http://maps.google.com/?q=' + this.props.business.address + ' ' + this.props.business.city + ' ' + this.props.business.state + ' ' + this.props.business.zipCode } target=\"_blank\" rel=\"noopener noreferrer\">\n                            <p>{ this.props.business.address }</p>\n                            <p>{ this.props.business.city }</p>\n                            <p>{ this.props.business.state } { this.props.business.zipCode }</p>\n                        </a>\n                    </div>\n                    <div className=\"Business-reviews\">\n                        <h3>{ this.props.business.category }</h3>\n                        <p id=\"rat\">{ this.props.business.rating } stars</p>\n                        <p>{ this.props.business.reviewCount } reviews</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Business;","import React from \"react\";\nimport Business from \"../Business/Business\";\nimport './BusinessListStyles.css'\n\n// designed to display a collection of businesses utilizing the business component from the businesses array\n\nclass BusinessList extends React.Component {\n    render() {\n        return (\n            <div className=\"BusinessList\">\n                {this.props.businesses.map((businesses) => {\n                    return <Business key={businesses.id} business={businesses} />\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BusinessList;","import React from \"react\";\nimport \"./SearchBarStyles.css\";\n\n\nclass SearchBar extends React.Component {\n    // constructor to set state of the search\n    constructor(props) {\n        super(props);\n        this.state = {\n            busName: '',\n            location: '',\n            sortBy: 'best_match'\n        };\n\n        // parent handlers to bind changes\n\n        this.handleBusNameChange = this.handleBusNameChange.bind(this);\n        this.handleLocationChange = this.handleLocationChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n\n        // list of sort options and key value pairs\n        this.sortByOptions = {\n            \"Best Match\": \"best_match\",\n            \"Highest Rated\": \"rating\",\n            \"Most Reviewed\": \"review_count\",\n        };\n    }\n\n    // sets active state on the li selected for visual feedback\n    getSortByClass (sortByOption) {\n        if (this.state.sortBy === sortByOption) {\n        return 'active';\n        } else {\n        return '';\n        }\n    }\n\n    // handle methods to handle each search by change of any category\n\n    handleSortByChange(sortByOption) {\n        this.setState({ sortBy: sortByOption });\n        this.props.searchYelp(this.state.busName, this.state.location, this.state.sortBy);\n    }\n\n    handleBusNameChange(event) {\n        this.setState({ busName: event.target.value });\n    }\n\n    handleLocationChange(event) {\n        this.setState({ location: event.target.value });\n    }\n\n    handleSearch(event) {\n        this.props.searchYelp(this.state.busName, this.state.location, this.state.sortBy);\n        event.preventDefault();\n    }\n\n    // react mapping method to take the sortByOptions list of key value pairs and map li items \n    // and adding appropriate props\n    renderSortByOptions = () => {\n        return Object.keys(this.sortByOptions).map((sortByOption) => {\n        let sortByOptionValue = this.sortByOptions[sortByOption];\n        return <li className={this.getSortByClass(sortByOptionValue)}\n            key={sortByOptionValue}\n            onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n            {sortByOption}</li>;\n        });\n    }\n\n    render() {\n        return (\n            <form className=\"SearchBar\">\n                {/* sorting options */}\n                <div className=\"SearchBar-sort-options\">\n                    <ul>{this.renderSortByOptions()}</ul>\n                </div>\n                {/* search bar inputs fir business name and location */}\n                <div className=\"SearchBar-fields\">\n                    <input placeholder=\"Search Businesses\" onChange={this.handleBusNameChange} />\n                    <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\n                </div>\n                {/* search/submit button */}\n                <div className=\"SearchBar-submit\">\n                    <button type=\"submit\" onClick={this.handleSearch}>Let's Go</button>\n                </div>\n            </form>\n        );\n    }\n\n}\n\nexport default SearchBar;\n","\n// importing yelp api and populating required fields for the application to display\n// when yelp is called on with the term, location, and sortBy props it will access the API\n// and pull data and map each appropriate key value pair\n\nconst yelpApiKey = \"li9RD5e43CrGwV0Qh6SGqhI_zVFTpVzjR0XXL_Jh9-79P4enqe0PpWKsJxBV-sXn7j5syezzEEeco0GeAWUBZNQri3bWEHXY3F3lEXZSPkua-gtUaAmPoLTWnKBPZHYx\";\n\nconst Yelp = {\n    searchYelp(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, \n        {\n            headers: {\n                Authorization: `Bearer ${yelpApiKey}`\n                }\n            }\n        )\n        .then(response => {\n            console.log(response);\n            return response.json();\n        })\n        .then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map(business => {\n                    return {\n                        id: business.id,\n                        imgSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                    };\n                });\n            }\n        })\n        .catch(error => console.log(error));\n    }\n}\n\nexport default Yelp;","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../utils/yelpAPI';\n\n// this is a front end react project to replicate a Yelp style app. It's designed for a user to search for a business and location and organize\n// the search results based 3 choices for sorting. The application calls on the Yelp API to display real results.\n\nclass App extends React.Component {\n  // constructor to update the state of each search by populating an array of businesses from yelp API\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n\n  }\n\n  //simulated search functionality to set up proper prop passing through Yelp which maps each business to the businesses array\n  // with the key value pairs designated in Yelp.js\n  searchYelp(term, location, sortBy) {\n    Yelp.searchYelp(term, location, sortBy).then(businesses => {\n      this.setState({ businesses: businesses });\n    });\n  }\n\n  // rendering what is displayed on screen by calling on components and passing the required props through each component \n  render() {\n    return (\n      <div className='App'>\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}